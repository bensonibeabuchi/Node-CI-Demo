# trigger:
# - main

# pool:
#   name: Azure Pipelines

# steps:
# - task: NodeTool@0
#   inputs:
#     versionSpec: '16.x'
#   displayName: 'Install Node.js'

# - script: |
#     npm install
#     npm run build
#     npm test
# - task: PublishTestResults@2
#   inputs:
#     testResultsFormat: 'JUnit'
#     testResultsFiles: '**/TEST-*.xml'
#   displayName: 'npm install and build'

# - task: ArchiveFiles@2
#   inputs:
#     rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
#     includeRootFolder: false
#     archiveType: 'zip'
#     archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
#     replaceExistingArchive: true

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathToPublish: '$(Build.ArtifactStagingDirectory)'
#     artifactName: 'drop'
  

trigger:
- main            # or whichever branches you want

# ─────────────────────────────────────────────
# STAGE 1 – BUILD
# ─────────────────────────────────────────────
stages:
- stage: Build
  displayName: Build & Test
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: Azure Pipelines

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js 20 LTS'

    - script: |
        npm install
        npm run build
        npm test
      displayName: 'npm install, build & test'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/TEST-*.xml'
      displayName: 'Publish test results'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
      displayName: 'Archive build output'

    - task: PublishBuildArtifacts@1
      inputs:
        PathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: drop
      displayName: 'Publish artifact'

# ─────────────────────────────────────────────
# STAGE 2 – DEPLOY
# ─────────────────────────────────────────────
- stage: Deploy
  displayName: Deploy to App Service
  dependsOn: Build      # wait until Build succeeds

  jobs:
  - deployment: DeployWebApp
    displayName: Deploy to Linux App Service
    environment: production   # Azure DevOps Environment name (optional but recommended)
    pool:
      name: Azure Pipelines

    strategy:
      runOnce:
        deploy:
          steps:
          # Download artifact produced in Build stage
          - download: current
            artifact: drop

          # Deploy ZIP to App Service
          - task: AzureWebApp@1
            displayName: 'Deploy to my-node20-app'
            inputs:
              azureSubscription: 'ARM-first-connection-benson'   # Service connection name
              appType: 'webappLinux'
              appName: 'benson-lab6-app'                        # App Service name
              runtimeStack: 'NODE|20-lts'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
